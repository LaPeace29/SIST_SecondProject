----------------------------------------------------------------------
-- STUDENT
-- 출력 1. 수강생 번호 / 수강생 이름 / 수강생 휴대폰번호 / 수강생 등록일 / 수강 횟수
-- student_list1_VW
CREATE OR REPLACE VIEW student_list1_VW
AS
SELECT student_id, student_name, student_phone, student_regdate,
        (SELECT COUNT(*) 
            FROM student_history
            WHERE student_id = s.student_id) count_
    FROM student s;
    
-- 출력 2. 수강생 번호 / 수강생 이름 / 수강생 휴대폰번호 / 수강생 등록일 / 수료여부 / 날짜
-- student_list2_VW1
CREATE OR REPLACE VIEW student_list2_VW1
AS
SELECT oc.class_room_id, oc.open_course_id, oc.course_id, oc.open_course_start_date,
	   oc.open_course_end_date, s.student_id, s.student_name, s.student_phone, s.student_regdate,
       c.course_name, os.instructor_id, os.open_subject_id
    FROM open_course oc, student_history sh, student s, course c, open_subject os
    WHERE oc.open_course_id = sh.open_course_id
        AND s.student_id = sh.student_id
        AND c.course_id = oc.course_id
        AND oc.open_course_id = os.open_course_id;
        
-- student_list2_VW2
CREATE OR REPLACE VIEW student_list2_VW2
AS
SELECT v1.class_room_id, v1.course_id, v1.open_course_end_date, v1.open_course_id,
        v1.open_course_start_date, v1.student_id, v1.student_name, v1.student_phone, 
        v1.student_regdate, v1.instructor_id, v1.open_subject_id, pc.dropout_date, course_name
    FROM student_list2_VW1 v1, process_complete pc
    WHERE v1.open_course_id = pc.open_course_id(+)
        AND v1.student_id = pc.student_id(+);
        
-- student_list2_VW3
CREATE OR REPLACE VIEW student_list2_VW3
AS
SELECT student_id, student_name, student_phone, student_regdate, 
        CASE WHEN SYSDATE < open_course_start_date AND dropout_date is null THEN '수료예정'
            WHEN SYSDATE > open_course_end_date AND dropout_date is null THEN '수료완료'
            WHEN dropout_date IS NOT NULL THEN '중도탈락'
        else '진행중' END completion, 
        NVL2(dropout_date, dropout_date,open_course_end_date) completion_date, open_course_id, 
        course_name, instructor_id, open_subject_id
    FROM student_list2_VW2;

----------------------------------------------------------------------
-- OPENCOURSE
-- 출력 1. 개설 과정 번호 / 과정명 / 개설 과정 기간 / 강의실명
-- open_course_list1_VW
CREATE OR REPLACE VIEW open_course_list1_VW
AS
SELECT oc.open_course_id, c.course_name, oc.open_course_start_date, oc.open_course_end_date,
        st.student_id, cr.class_room_name
    FROM open_course oc, course c, class_room cr, student_history sh, student st
    WHERE oc.course_id = c.course_id
        AND oc.class_room_id = cr.class_room_id
        AND oc.open_course_id = sh.open_course_id
        AND sh.student_id = st.student_id;
        
-- 출력 2. 개설 과정 번호 / 과정명 / 개설 과정 기간 / 강의실명 / 개설 과목 등록 갯수 / 수강생 등록 인원
-- open_course_list2_VW
CREATE OR REPLACE VIEW open_course_list2_VW
AS
SELECT open_course_id, course_name, open_course_start_date ,open_course_end_date, class_room_name, 
        (SELECT COUNT(*) 
            FROM open_subject
            WHERE open_course_id=oc.open_course_id) os_count,
        (SELECT COUNT(*) 
            FROM student_history
            WHERE open_course_id=oc.open_course_id) s_count
    FROM open_course oc, course c, class_room cr
    WHERE oc.course_id = c.course_id
        AND oc.class_room_id=cr.class_room_id;
        
-- 출력 4. 개설 과정 번호 / 과정명 / 개설 과정 기간 / 강의실명 / 개설 과목명
-- open_course_list4_VW1
CREATE OR REPLACE VIEW open_course_list4_VW1
AS    
SELECT cr.class_room_id, cr.class_room_name, cr.max_number, oc.open_course_id,
	   oc.open_course_start_date, oc.open_course_end_date, c.course_id, c.course_name
    FROM open_course oc, course c, class_room cr
    WHERE cr.class_room_id = oc.class_room_id
        AND c.course_id = oc.course_id
        AND sysdate < open_course_start_date;    
    
-- open_course_list4_VW2
CREATE OR REPLACE VIEW open_course_list4_VW2
AS    
SELECT  v1.open_course_id, v1.class_room_name, v1.course_name, 
        v1.open_course_start_date, v1.open_course_end_date,
	   (SELECT (LISTAGG(s.subject_name, ', ') WITHIN GROUP(ORDER BY s.subject_id))
	       FROM open_subject t, subject s
	       WHERE s.subject_id = t.subject_id 
	           AND v1.open_course_id= t.open_course_id
	   ) subjectlist
    FROM open_course_list4_VW1 v1;

-- 출력 5. 개설 과정 번호 / 과정명 / 개설 과정 기간 / 강의실명 / 수료여부 / 날짜
-- open_course_list5_VW1
CREATE OR REPLACE VIEW open_course_list5_VW1
AS
SELECT oc.open_course_id, course_name, open_course_start_date, open_course_end_date, 
	   class_room_name, sh.student_id, 
       (SELECT dropout_date 
            FROM process_complete pc 
            WHERE pc.open_course_id = oc.open_course_id 
                AND pc.student_id = sh.student_id) drop_date
    FROM open_course oc, course c ,class_room cr, student_history sh
    WHERE c.course_id = oc.course_id
        AND cr.class_room_id = oc.class_room_id
        AND oc.open_course_id = sh.open_course_id; 

-- open_course_list5_VW2
CREATE OR REPLACE VIEW open_course_list5_VW2
AS
SELECT open_course_id, course_name, open_course_start_date, open_course_end_date, class_room_name,
        CASE
            WHEN SYSDATE < open_course_end_date AND drop_date is null THEN '수료예정'
            WHEN drop_date IS NOT NULL THEN '중도탈락'
            else '수료'
        END completion, drop_date, student_id
    FROM open_course_list5_VW1;
    
-- 검색. 개설 과정 번호 / 과정명 / 개설 과정 기간 / 강의실명
-- open_course_search_VW
CREATE OR REPLACE VIEW open_course_search_VW
AS
SELECT oc.open_course_id, c.course_name, oc.open_course_start_date, oc.open_course_end_date, 
        cr.class_room_name
    FROM open_course oc, course c, class_room cr
    WHERE oc.course_id = c.course_id
        AND oc.class_room_id = cr.class_room_id;

----------------------------------------------------------------------
-- OPENSUBJECT
-- 출력 1. 개설 과목 번호 / 과목명 / 개설 과목 기간 / 교재명 / 강사명
-- open_subject_list1_VW1
CREATE OR REPLACE VIEW open_subject_list1_VW1
AS
SELECT open_subject_id, subject_name, subject_start_date, subject_end_date,
        instructor_name, subjectbook_id, oc.open_course_id, sh.student_id
    FROM subject s, open_subject os, instructor i, open_course oc, student_history sh
    WHERE s.subject_id = os.subject_id
        AND i.instructor_id = os.instructor_id
        AND os.open_course_id = oc.open_course_id
        AND sh.open_course_id = oc.open_course_id;

-- open_subject_VW2
CREATE OR REPLACE VIEW open_subject_list1_VW2
AS
SELECT open_subject_id, subject_name, subject_start_date, subject_end_date, 
        instructor_name, subjectbook_name, open_course_id, student_id
    FROM open_subject_list1_VW1 v1, subjectbook sb
    WHERE sb.subjectbook_id(+) = v1.subjectbook_id; 

-- 출력 2. 개설 과목 번호 / 과목명 / 개설 과목 기간 / 교재명 / 강사명 / 과정명 / 개설 과정 기간 / 강의실명
-- open_subject_list2_VW1
CREATE OR REPLACE VIEW open_subject_list2_VW1
AS
SELECT open_subject_id, subject_name, subject_start_date, subject_end_date, subjectbook_id,
        instructor_name, course_name, open_course_start_date, open_course_end_date, 
        class_room_name, oc.open_course_id, st.student_id         
    FROM open_subject os, subject s, instructor i, 
        open_course oc, class_room cr, course c, student_history sh, student st
    WHERE os.subject_id = s.subject_id
        AND os.instructor_id = i.instructor_id
        AND os.open_course_id = oc.open_course_id
        AND oc.course_id = c.course_id
        AND oc.class_room_id = cr.class_room_id
        AND oc.open_course_id = sh.open_course_id
        AND sh.student_id = st.student_id;
   
-- open_subject_list2_VW2
CREATE OR REPLACE VIEW open_subject_list2_VW2
AS
SELECT open_subject_id, subject_name, subject_start_date, subject_end_date, subjectbook_name,
        instructor_name, course_name, open_course_start_date, open_course_end_date, 
        class_room_name, open_course_id, student_id
    FROM open_subject_list2_VW1 v1, subjectbook sb
    WHERE v1.subjectbook_id = sb.subjectbook_id(+);
    
-- 출력 3. 개설 과목 번호 / 과목명 / 개설 과목 기간 / 교재명 / 강사명 / 과정명 / 개설 과정 기간 / 강의실명 / 삭제 가능 여부
-- open_subject_list3_VW
CREATE OR REPLACE VIEW open_subject_list3_VW
AS
SELECT open_subject_id, subject_name, subject_start_date, subject_end_date, subjectbook_name, 
        instructor_name,  course_name , open_course_start_date,  open_course_end_date, class_room_name,
        (SELECT COUNT(*) 
            FROM exam
            WHERE open_subject_id = v.open_subject_id) count_
    FROM open_subject_list2_VW2 v;
    
-- 출력 4. 개설 과목 번호 / 과목명 / 개설 과목 기간 / 비고
-- open_subject_list4_VW
CREATE OR REPLACE VIEW open_subject_list4_VW
AS
SELECT open_subject_id, subject_name, subject_start_date, subject_end_date, instructor_id,
        CASE
            WHEN SYSDATE <subject_start_date THEN '강의 예정'
            WHEN SYSDATE >subject_end_date THEN '강의 종료'
            else '강의 중'
        END completion
    FROM open_subject os, subject s
    WHERE os.subject_id = s.subject_id;

-- 출력 5. 개설 과목 번호 / 과정명 / 개설 과정 기간 / 강의실명 / 과목명 / 개설 과목 기간 / 교재명 / 수강생 등록 인원
-- open_subject_list5_VW1
CREATE OR REPLACE VIEW open_subject_list5_VW1
AS
SELECT os.instructor_id, course_name, open_course_start_date, open_course_end_date,
        class_room_name,open_subject_id, subject_name, subject_start_date, subject_end_date, 
        subjectbook_id, oc.open_course_id
    FROM course c, open_course oc, class_room cr, open_subject os, subject s
    WHERE c.course_id = oc.course_id
        AND cr.class_room_id = oc.class_room_id
        AND oc.open_course_id = os.open_course_id
        AND s.subject_id = os.subject_id;
        
-- open_subject_list5_VW2
CREATE OR REPLACE VIEW open_subject_list5_VW2
AS
SELECT v1.instructor_id, course_name, open_course_start_date, open_course_end_date, 
        open_subject_id ,class_room_name, open_course_id, subject_name, 
        subject_start_date, subject_end_date, subjectbook_name
    FROM open_subject_list5_VW1 v1, subjectbook sb
    WHERE v1.subjectbook_id = sb.subjectbook_id(+);
    
-- 출력 6. 과목명 / 개설 과목 기간 / 과정명 / 개설 과정 기간 / 강의실 / 강의 진행 여부
-- open_subject_list6_VW
CREATE OR REPLACE VIEW open_subject_list6_VW
AS
SELECT os.open_subject_id, subject_name, subject_start_date, subject_end_date, course_name, 
        open_course_start_date, open_course_end_date, class_room_name,
        CASE
            WHEN SYSDATE <subject_start_date THEN '강의 예정'
            WHEN SYSDATE >subject_end_date THEN '강의 종료'
            else '강의 중'
        END completion, ip.instructor_id
    FROM subject s, open_subject os, course c, open_course oc, class_room cr, 
        instructor i, instructor_possible ip
    WHERE s.subject_id = os.subject_id
        AND oc.open_course_id = os.open_course_id
        AND c.course_id = oc.course_id
        AND cr.class_room_id = oc.class_room_id
        AND i.instructor_id = os.instructor_id
        AND ip.subject_id = s.subject_id;
        
-- 검색. 개설과목번호 / 개설과목명 / 개설과목기간 / 교재명 / 강사명
-- open_subject_search_VW1
CREATE OR REPLACE VIEW open_subject_search_VW1
AS
SELECT open_subject_id, subject_name, subject_start_date, subject_end_date, 
        instructor_name, subjectbook_id, s.subject_id, course_name
    FROM subject s, open_subject os, instructor i, open_course oc, course c
    WHERE s.subject_id = os.subject_id
        AND i.instructor_id = os.instructor_id
        AND os.open_course_id = oc.open_course_id
        AND c.course_id = oc.course_id;

-- open_subject_search_VW2
CREATE OR REPLACE VIEW open_subject_search_VW2
AS
SELECT open_subject_id, subject_name, subject_start_date, subject_end_date, 
        instructor_name, subjectbook_name, course_name
    FROM open_subject_search_VW1 v1, subjectbook sb
    WHERE sb.subjectbook_id(+) = v1.subjectbook_id; 
    
----------------------------------------------------------------------
-- EXAM
-- 출력 1. 시험번호 / 출결 배점 / 필기 배점 / 실기 배점 / 시험 날짜 / 시험문제 파일
-- exam_list1_VW1
CREATE OR REPLACE VIEW exam_list1_VW1
AS
SELECT os.instructor_id, os.open_course_id, os.open_subject_id, os.subject_end_date, 
        os.subject_id, os.subject_start_date, os.subjectbook_id, e.exam_id, e.exam_date, e.exam_file
    FROM open_subject os, exam e
    WHERE os.open_subject_id = e.open_subject_id;
    
-- exam_list1_VW2
CREATE OR REPLACE VIEW exam_list1_VW2
AS    
SELECT v1.exam_date, v1.exam_file, v1.instructor_id, v1.open_course_id, v1.open_subject_id, 
        v1.subject_end_date , v1.subject_id , v1.subject_start_date , v1.subjectbook_id, 
        sp.attendance_point, sp.exam_id, sp.skill_point, sp.subject_point_id, sp.write_point 
    FROM  exam_list1_VW1 v1, subject_point sp
    WHERE v1.exam_id = sp.exam_id(+);
    
-- 출력 2. 시험번호 / 출결점수 / 출결배점 / 필기점수 / 필기배점 / 실기점수 / 실기배점 / 시험날짜 / 시험파일
-- exam_list2_VW
CREATE OR REPLACE VIEW exam_list2_VW
AS
SELECT os.open_subject_id, s.subject_name, os.subject_start_date, os.subject_end_date,
        i.instructor_name, p.attendance_point, p.write_point, p.skill_point, 
        ss.attendance_score, ss.write_score, ss.skill_score, 
        e.exam_id, e.exam_date, e.exam_file, st.student_id
    FROM subject s, open_subject os, instructor i, subject_point p, exam e, 
        student_score ss , student st
    WHERE os.subject_id = s.subject_id
        AND i.instructor_id = os.instructor_id
        AND e.exam_id = p.exam_id
        AND e.open_subject_id = os.open_subject_id
        AND ss.exam_id = e.exam_id
        AND st.student_id = ss.student_id;
        
-- 출력 3. 시험번호 / 출결 배점 / 필기 배점 / 실기 배점 / 시험 날짜 / 시험문제 파일 / 성적 등록 인원수 / 성적 등록 여부
-- exam_list3_VW1
CREATE OR REPLACE VIEW exam_list3_VW1
AS
SELECT e.exam_id, attendance_point, write_point, skill_point, exam_date, exam_file, 
        os.open_course_id, instructor_id, os.open_subject_id
    FROM exam e, subject_point sp, open_subject os, open_course oc
    WHERE e.exam_id = sp.exam_id
        AND e.open_subject_id = os.open_subject_id
        AND os.open_course_id = oc.open_course_id;

-- exam_list3_VW2
CREATE OR REPLACE VIEW exam_list3_VW2
AS
SELECT v1.exam_id, attendance_point, write_point, skill_point, exam_date, exam_file, 
        instructor_id, open_subject_id,
        (SELECT COUNT(*) 
            FROM student_score ss 
            WHERE v1.exam_id = ss.exam_id) count_,
        (SELECT COUNT(*) 
            FROM student_history sh 
            WHERE v1.open_course_id = sh.open_course_id) score_s
    FROM exam_list3_VW1 v1
    ORDER BY v1.exam_id;
    
-- exam_list3_VW3
CREATE OR REPLACE VIEW exam_list3_VW3
AS
SELECT exam_id, attendance_point, write_point, skill_point, exam_date, exam_file, 
        count_, instructor_id, open_subject_id, 
        CASE count_
            WHEN score_s THEN '성적 입력 완료'
            else '성적 입력 전'
        END score_state
    FROM exam_list3_VW2 v2;
    
-- 출력 4. 수강생 번호 / 수강생 이름 / 수강생 전화번호 / 수강생 등록일 / 수료여부 / 수료날짜 / 출결 점수 / 필기 점수 / 실기 점수 / 총점
-- exam_list4_VW1
CREATE OR REPLACE VIEW exam_list4_VW1
AS
SELECT s.student_id, student_name, student_phone, student_regDate, 
        (SELECT dropout_date 
            FROM process_complete pc 
            WHERE pc.open_course_id = sh.open_course_id 
                AND pc.student_id = sh.student_id) drop_date, 
        open_course_start_date, open_course_end_date, 
        attendance_score, write_score, skill_score, open_subject_id, instructor_id, exam_id
    FROM student_score ss, student s, student_history sh, open_course oc, open_subject os
    WHERE ss.student_id = s.student_id
        AND s.student_id = sh.student_id
        AND oc.open_course_id = sh.open_course_id
        AND oc.open_course_id = os.open_course_id;
    
-- exam_list4_VW2
CREATE OR REPLACE VIEW exam_list4_VW2
AS
SELECT student_id, student_name, student_phone, student_regDate, open_subject_id, drop_date,
        open_course_end_date, instructor_id, exam_id, 
        CASE
            WHEN SYSDATE < open_course_start_date AND drop_date is null THEN '수료예정'
            WHEN SYSDATE > open_course_end_date AND drop_date is null THEN '수료완료'
            WHEN drop_date IS NOT NULL THEN '중도탈락'
            else '진행중'
        END completion, 
        attendance_score, write_score, skill_score, 
        attendance_score+write_score+skill_score AS total
    FROM exam_list4_VW1;

-- exam_list4_VW3
CREATE OR REPLACE VIEW exam_list4_VW3
AS
SELECT student_id, student_name, student_phone, student_regDate, completion, 
        CASE completion 
            WHEN '중도탈락' THEN drop_date 
            ELSE open_course_end_date 
        END completion_date,
        attendance_score, write_score, skill_score, total, 
        instructor_id, open_subject_id, exam_id
    FROM exam_list4_VW2;